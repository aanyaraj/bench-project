name: Java CI Pipeline
 
on:
  push:
    branches:
      - master
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3
 
      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
 
      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean install
 
      # Step 4: Run tests
      - name: Run tests
        run: mvn test
 
      # Step 5: Set up Docker buildx
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
 
      # Step 6: Login to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
 
      # Step 7: Set image tags with timestamp
      - name: Set timestamp image tag
        id: tag
        run: |
          TIMESTAMP=$(date -u +'%Y%m%d%H%M%S')
          echo "IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/bench-project:$TIMESTAMP" >> $GITHUB_ENV
          echo "LATEST_TAG=${{ secrets.DOCKER_USERNAME }}/bench-project:latest" >> $GITHUB_ENV
 
      # Step 8: Build Docker image
      - name: Build Docker image
        run: docker build -t $IMAGE_TAG -t $LATEST_TAG .
 
      # Step 9: Push Docker image
      - name: Push Docker image
        run: |
          docker push $IMAGE_TAG
          docker push $LATEST_TAG

      - name: Render ECS task definition with new image
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: bench-container
          image: ${{ env.IMAGE_TAG }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Deploy updated task definition to ECS Fargate
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          service: ecs-template-ECSService-lcaj8uPWNIFp
          cluster: TestECSCluster
          wait-for-service-stability: true